[tool.poetry]
name = "vid_cap"
version = "0.1.0"
description = "Project to generate descriptions of the content of short videos made as part of postgraduate degree in Artificial Intelligence with Deep Learning."
authors = ["Postgraduate Degree in Artificial Intelligence with Deep Learning <email@domain.com>"]
packages = [{include = "vid_cap"}]

license = "Propietary"

keywords = ["deep", "learning", "video", "caption", "description", "artificial", "intelligence"]

repository = "https://github.com/dainelli98/video_caption.git"

readme = ["README.md", "LICENSE", "RELEASE_NOTES.md"]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

include = ["vid_cap/*"]

[tool.poetry.dependencies]
av = ">=10.0.0"
click = "~8"
google-api-python-client = "^2.86.0"
google-auth = "^2.18.1"
google-auth-oauthlib = "^1.0.0"
joblib = "^1.2.0"
loguru = "~0.6"
httpx = "^0.24.0"
pandas = "^2.0.2"
pyarrow = ">=10.0.0"
python = "~3.10"
torch = "~2"
transformers = {extras = ["torch"], version = ">=4.29.1"}
tensorboard = "^2.13.0"
torchtext = "^0.15.2"
pillow = "^10.0.0"
matplotlib = "^3.7.2"
torchmetrics = "^1.0.0"
torcheval = "^0.0.6"
plotly = "^5.15.0"
subword-nmt = "^0.3.8"
tabulate = "^0.9.0"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "23.3.0"}
docformatter = "1.7.3"
GitPython = ">=3.1.27"
jupyterlab = ">=3.2.5"
jupytext = ">=1.13.7"
jupyter_contrib_nbextensions = ">=0.5.1"
pre-commit = ">=2.20.0"
python-dotenv = ">=0.20.0"
ruff = "0.0.275"

[tool.poetry.group.docs.dependencies]
furo = ">=2022.12.7"
myst-parser = ">=0.18.1"
sphinx = ">=5.3.0"
sphinx-autodoc-typehints = ">=1.21.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
vid-cap = "vid_cap.__main__:_main"

[tool.ruff]
line-length = 100
select = [
    "F", "E", "W", "ARG", "C90", "I", "N", "D", "UP", "YTT", "ANN", "S", "BLE", "FBT", "B", "A",
    "COM", "C40", "DTZ", "T10", "DJ", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT",
    "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY",
    "NPY", "RUF"
]
exclude = ["docs"]
ignore = [
    "ANN101", "ANN102", "B008", "D203", "D205", "D207", "D208", "D209", "D213", "D301", "FBT001",
    "FBT003", "PLE1205", "TRY003", "TRY300", "TRY400", "UP009", "FBT002", "D107", "B023", "EXE002",
    "DTZ005", "ANN401", "PT001", "COM812", "ANN002", "ANN003", "TID252", "S311", "NPY002",
    "PLW2901", "PD008", "PLR0915"
]
dummy-variable-rgx = "^test_(.*)"
cache-dir = ".ruff_cache"
target-version = "py310"

[tool.ruff.per-file-ignores]
"notebooks/*" = ["INP001", "D100", "PD901", "B018"]

[tool.ruff.pylint]
max-args = 10

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.pep8-naming]
ignore-names = ["i", "j", "k", "ex", "Run", "_", "df", "fp", "id", "x", "y"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
